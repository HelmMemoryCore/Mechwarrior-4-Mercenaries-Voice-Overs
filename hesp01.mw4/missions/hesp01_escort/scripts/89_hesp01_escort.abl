
//*********************************************************************************

fsm Hesp01_Escort : integer;		

//------------------------------------------------------------------
//
//     Constant Definitions
//
//------------------------------------------------------------------
     const

		#include_ <content\ABLScripts\mwconst.abi>
		#include_ <content\ABLScripts\Katie\Katie_consts.abi>  // <-- mektek
//------------------------------------------------------------------
//
//     Type Definitions
//
//------------------------------------------------------------------
     type

		#include_ <content\ABLScripts\mwtype.abi>

//------------------------------------------------------------------
//
//     Variable Declarations
//
//------------------------------------------------------------------
      var
			
		eternal integer playermech;
		eternal ObjectID theConvoy;
		
		eternal boolean obj1;
		eternal boolean obj2;
		eternal boolean obj3;
		eternal boolean obj4;
		eternal boolean obj5;
		eternal boolean obj6;

		eternal boolean launchChasers;
		eternal boolean launchHovers;
		eternal boolean launchTanks;
		eternal boolean launchConvoy;
		eternal boolean PauseConvoy;
		
		eternal boolean blowBridge;
		static ObjectID bridgeExplosion;
		static ObjectID bridge;
		
		static ObjectID currentNavPoint;
		static integer  currentNavNum;
		static integer  checkRange;
		
		static integer	cinema_cut;
		
		static boolean firstAlphaVo;
		static boolean SecondAlphaVo;
		static boolean BridgeVo;
		static boolean firstBetaVo;
		static boolean firstZetaVo;
		static boolean SecondZetaVo;
		static boolean firstGammaVo;
		
		static boolean AlphaReached;
		static boolean BetaReached;
		static boolean GammaReached;
		static boolean ZetaReached;
		
		eternal Integer DavionRating;
		eternal Integer SteinerRating;
		eternal Integer Nobility;
		eternal Integer Infamy;
		static 	integer Regiment;
		
		static 	integer Group1Size;
		
//------------------------------------------------------------------
//
//     Init Function    (automatically run first time through)
//
//------------------------------------------------------------------

function init;
	code
	
    playermech = getplayervehicle(epl_player0);	
		if (GetLancemate(1) <> NO_UNIT) then
			GroupAddObject(GroupObjectId(5),GetLancemate(1));
		endif;
		if (GetLancemate(2) <> NO_UNIT) then
			GroupAddObject(GroupObjectId(5),GetLancemate(2));
		endif;
		if (GetLancemate(3) <> NO_UNIT) then
			GroupAddObject(GroupObjectId(5),GetLancemate(3));
		endif;
		if (GetSecondaryLancemate(1) <> NO_UNIT) then
			GroupAddObject(GroupObjectId(5),GetSecondaryLancemate(1));
		endif;
		if (GetSecondaryLancemate(2) <> NO_UNIT) then
			GroupAddObject(GroupObjectId(5),GetSecondaryLancemate(2));
		endif;
		if (GetSecondaryLancemate(3) <> NO_UNIT) then
			GroupAddObject(GroupObjectId(5),GetSecondaryLancemate(3));
		endif;
		if (GetSecondaryLancemate(4) <> NO_UNIT) then
			GroupAddObject(GroupObjectId(5),GetSecondaryLancemate(4));
		endif;
		Group1Size = GroupSize(GroupObjectId(5));

    // The convoy
	GroupAddObject(GroupObjectId(10),eve_convoy01);
    GroupAddObject(GroupObjectId(10),eve_convoy02);
    GroupAddObject(GroupObjectId(10),eve_convoy03);
    GroupAddObject(GroupObjectId(10),eve_convoy04);
    GroupAddObject(GroupObjectId(10),eve_convoy05);
    SetGroupAI(groupobjectid(10),GROUPAI_RADIOSQUAD);
	theConvoy = groupObjectID(10);
 		
	// Friendlies
	GroupAddObject(GroupObjectId(15),eve_friendly01);
	GroupAddObject(GroupObjectId(15),eve_friendly02);
	GroupAddObject(GroupObjectId(15),eve_friendly03);
    SetGroupAI(groupobjectid(15),GROUPAI_RADIOSQUAD);
		
	// Hover Attack
	GroupAddObject(GroupObjectId(20),eve_hover01);
	GroupAddObject(GroupObjectId(20),eve_hover02);
	GroupAddObject(GroupObjectId(20),eve_hover03);
	GroupAddObject(GroupObjectId(20),eve_hover04);
	GroupAddObject(GroupObjectId(20),eve_hover05);
	GroupAddObject(GroupObjectId(20),eve_hover06);
	GroupAddObject(GroupObjectId(20),eve_hover07);
	GroupAddObject(GroupObjectId(20),eve_hover08);
    SetGroupAI(groupobjectid(20),GROUPAI_RADIOSQUAD);
	
	// Chasers
	GroupAddObject(GroupObjectId(30),eve_chaser01);
	GroupAddObject(GroupObjectId(30),eve_chaser02);
    SetGroupAI(groupobjectid(30),GROUPAI_RADIOSQUAD);
	
	// Tank Attack
	GroupAddObject(GroupObjectId(40),eve_tank01);
	GroupAddObject(GroupObjectId(40),eve_tank02);
	GroupAddObject(GroupObjectId(40),eve_tank03);
	GroupAddObject(GroupObjectId(40),eve_tank04);
	GroupAddObject(GroupObjectId(40),eve_Jumper01);
    SetGroupAI(groupobjectid(40),GROUPAI_RADIOSQUAD);
	
	// Demolishers
	GroupAddObject(GroupObjectId(41),eve_demo01);
	GroupAddObject(GroupObjectId(41),eve_demo02);
    SetGroupAI(groupobjectid(41),GROUPAI_RADIOSQUAD);
	
	
	obj1 = false;
	obj2 = false;
	obj3 = false;
	obj4 = false;
	obj5 = false;
	obj6 = false;
	
	launchChasers = false;
	launchHovers = false;
	launchTanks = false;
	launchConvoy = false;
	
	blowBridge = false;
	bridgeExplosion = ebu_Bridge_Debris;
	bridge = ebu_bridge1;
	
	cinema_cut = 0; 						
		
		DavionRating = GetPreviousDavionFactionRating;
		Davionrating = DavionRating;
		SteinerRating = GetPreviousSteinerFactionRating;
		SteinerRating = SteinerRating + 9;
		Nobility = GetPreviousNobility;
		nobility = nobility + 4;
		Infamy = GetPreviousInfamy;
		infamy = infamy;
		
		Regiment = GetSponsorRegiment;
		
endfunction;
		#include_ <content\ABLScripts\Katie\Katie_script.abi>  // <-- mektek
//------------------------------------------------------------------
//
//     Main Code
//
//------------------------------------------------------------------
state startState;

	code
		
	RevealObjective(eob_Objective01);
	RevealObjective(eob_Objective04);
	RevealObjective(eob_Objective05);
	
	RevealNavpoint(ena_Nav_Alpha);		
	RevealNavpoint(ena_Nav_Beta);
	RevealNavpoint(ena_Nav_Gamma);
	
	setRadarNav(ena_Nav_Alpha, 1);
	setRadarNav(ena_Nav_Beta,  2);
	setRadarNav(ena_Nav_Gamma, 3);
	setRadarNav(ena_Nav_Zeta, 6);
	SetNavPoint(ena_Nav_Alpha);
	
	currentNavPoint = ena_ChaseTrigger;
	currentNavNum = 1;
	checkRange = 100;
	
	//Salvage Chance
/* MekTek: Shark removed these and replaced them with Katie calls
	SetKillSalvageChance(eve_Chaser01, 50);		//thanatos
	SetKillSalvageChance(eve_Chaser02, 50);		//thanatos
	SetKillSalvageChance(eve_Jumper01, 50);		//ShadowCat
	SetKillSalvageChance(eve_Jumper02, 50);		//ShadowCat
*/	
	
	//Intro VO
	PlayVoiceOverOnce("VO\Hesp\MI1\Intro1", talker_SPE);
	PlayVoiceOverOnce("VO\Hesp\MI1\Intro2", talker_CNV);
	PlayVoiceOverOnce("VO\Hesp\MI1\Intro6", talker_SPE);
	if (Regiment == REGIMENT_GDLEG) then			//IF grayDeath then
		PlayVoiceOverOnce("VO\Hesp\MI1\Intro3", talker_CNV);
		PlayVoiceOverOnce("VO\Hesp\MI1\Intro4", talker_SPE);
		PlayVoiceOverOnce("VO\Hesp\MI1\Intro5", talker_CNV);
	endif;
	StartMusic("Music\skitterSprint",0.0,3.0,40);
	
	trans opening;
	
endstate;

	
state deadState;
	code
endstate;
	
//------------------------------------------------------------------
//
//     Sit state : description
//
//------------------------------------------------------------------
state sit;

	code
	//Music
	if (not ismusicplaying) then
		StartMusic("Music\arcticambloop",0.0,3.0,40);
	endif;
	
	//VO
	if (not firstAlphaVO) then
		if isWithin(TheConvoy, eve_Jumper02, 750) then
			PlayVoiceOverOnce("VO\Hesp\MI1\ColdStart800Meters", talker_CNV);
			if (not GroupAllDead(groupObjectID(5))) and (Group1Size > 0) then
				PlayVoiceOverOnce("VO\Hesp\MI1\LookSharpLance", talker_SPE);
				PlayLanceMateSound("vo\generic\Roger",3);
			endif;
			firstAlphaVO = true;
		endif;
	endif;
	if (not secondAlphaVO) then
		if launchChasers then
			PlayVoiceOverOnce("VO\Hesp\MI1\MechUpRear", talker_CAS);
			PlayLanceMateSound("vo\generic\ActionRear",1);
			//PlayVoiceOverOnce("VO\Hesp\MI1\KeepLeadSir", talker_CAS);
			PlayVoiceOverOnce("VO\Hesp\MI1\Affirmative", talker_SPE);
			PlayVoiceOverOnce("VO\Hesp\MI1\HurryUp", talker_SPE);
			secondAlphaVO = true;
		endif;
	endif;
	if (not bridgeVO) then
		if blowBridge then
			PlayVoiceOverOnce("VO\Hesp\MI1\TheyBlewTheBridge", talker_CNV);
			PlayVoiceOverOnce("VO\Hesp\MI1\Negative", talker_SPE);
			PlayVoiceOverOnce("VO\Hesp\MI1\CastlePlotRoute", talker_SPE);
			PlayVoiceOverOnce("VO\Hesp\MI1\AlreadyOnIt", talker_CAS);
			playVoiceOver("VO\OneSecond", talker_SPE);
			PlayVoiceOverOnce("VO\Hesp\MI1\UploadingZeta", talker_CAS);
			PlayVoiceOverOnce("VO\Hesp\MI1\GoodWork", talker_SPE);
			bridgeVO = true;
		endif;
	endif;
	if (not FirstZetaVO) then
		if isWithin(theConvoy, eve_jumper01, 450) then
			PlayVoiceOverOnce("VO\Hesp\MI1\BanditsAtZeta", talker_CNV);
			PlayVoiceOverOnce("VO\Hesp\MI1\WeNeedCover", talker_CNV);
			PlayVoiceOverOnce("VO\Hesp\MI1\RogerEngaging", talker_SPE);
			firstZetaVO = true;
		endif;
	endif;
	if (not SecondZetaVO) then
		if groupAllDead(groupObjectID(40)) then
			PlayVoiceOverOnce("VO\Hesp\MI1\ZetaBanditsClear", talker_SPE);
			secondZetaVO = true;
		endif;
	endif;
	if (not firstBetaVO) then
		if IsWithin(playermech, GroupObjectID(41), 900) and obj2 then
			if (not GroupAllDead(groupObjectID(5))) and (Group1Size > 0) then
				PlayLanceMateSound("vo\generic\Demolishers",1);
			else
				PlayVoiceOver("VO\generic\GroundUnits", talker_Cas);
			endif;
			firstBetaVO = true;
		endif;
	endif;
	if (not firstGammaVO) then
		if Iswithin(playerMech, GroupObjectID(20), 1000) and firstZetaVO then
			PlayVoiceOverOnce("VO\Hesp\MI1\MultipleContacts", talker_CAS);
			PlayVoiceOverOnce("VO\Hesp\MI1\CopyThat", talker_SPE);
			PlayVoiceOverOnce("VO\Hesp\MI1\TheyWantConvoyBad", talker_SPE);
			firstGammaVO = true;
		endif;
	endif;
		
	// Betty speaks when reaching Nav Point
	if (not alphareached) then
		if (isnavrevealed(ena_nav_alpha)) then
			if (iswithin(playermech,ena_nav_alpha,checkrange)) then
				playvoiceover("VO\generic\navalpha",talker_Bet);
				alphareached = true;
			endif;
		endif;
	endif;
	if (not betareached) then
		if (isnavrevealed(ena_nav_beta)) then
			if (iswithin(playermech,ena_nav_beta,checkrange)) then
				playvoiceover("VO\generic\navbeta",talker_Bet);
				betareached = true;
			endif;
		endif;
	endif;
	if (not gammareached) then
		if (isnavrevealed(ena_nav_gamma)) then
			if (iswithin(playermech,ena_nav_gamma,checkrange)) then
				playvoiceover("VO\generic\navgamma",talker_Bet);
				gammareached = true;
			endif;
		endif;
	endif;
	if (not zetareached) then
		if (isnavrevealed(ena_nav_zeta)) then
			if (iswithin(playermech,ena_nav_zeta,checkrange)) then
				playvoiceover("VO\generic\navzeta",talker_Bet);
				zetareached = true;
			endif;
		endif;
	endif;
	
	//VO end					
	
	//Convoy Nav Checking routine
	if not obj5 then
		if isWithin(theConvoy, currentNavPoint, checkRange) then
			switch ( currentNavNum )
				case 1:
					// Launch Chasers
					launchChasers = true;
					currentNavPoint = ena_Nav_Alpha;
				endcase;
				case 2:
					PlayVoiceOverOnce("VO\Hesp\MI1\ConvoyAtAlpha", talker_CNV);
					successObjective(eob_Objective01);
					obj1 = true;
					setnavpoint(ena_Nav_Beta);
					currentNavPoint = ena_BridgeTrigger;
				endcase;
				case 3:
					
					//Pause Convoy
					if (not blowBridge) then
						PlayVoiceOverOnce("VO\Hesp\MI1\ConvoyAtBridge", talker_CNV);
						pauseConvoy = true;
					endif;
					currentNavPoint = ena_tankTrigger;
				endcase;
				case 4:
					//Launch tanks
					launchTanks = true;
					
					currentNavPoint = ena_Nav_Zeta;
				endcase;
				case 5:
					//Say "Nav Delta Reached"
					setnavpoint(ena_Nav_Beta);
					successObjective(eob_Objective02);
					obj2 = true;
					
					currentNavPoint = ena_hoverTrigger;
				endcase;
				case 6:
					//LaunchHovers
					launchHovers = true;
				
					currentNavPoint = ena_Nav_Beta;
				endcase;	
				case 7:
					PlayVoiceOverOnce("VO\Hesp\MI1\NavPointBeta", talker_CNV);
					setnavpoint(ena_Nav_Gamma);
					successObjective(eob_Objective03);
					RevealObjective(eob_Objective06);
					obj3 = true;
					currentNavPoint = ena_Nav_Gamma;
				endcase;	
				case 8:
					PlayVoiceOverOnce("VO\Hesp\MI1\Close1", talker_CNV);
					successObjective(eob_Objective05);
					obj5 = true;
				endcase;	
			endswitch;
			currentNavNum = currentNavNum + 1;
		endif;
	endif;
	
	// Objective06
	if (not obj6) then
		if GroupAllDead(GroupObjectID(20)) and GroupAllDead(GroupObjectID(30)) then
			obj6 = true;
			successObjective(eob_Objective06);
		endif;
	endif;
	
	//blowBridge if player Reaches it
	if (not blowBridge) then
		if IsWithin(playerMech, bridge, 320) then
			Destroy(bridge);
			Destroy(bridgeExplosion);
			//failObjective(eob_Objective04);
			hideObjective(eob_Objective04);
			RevealObjective(eob_Objective02);
			RevealObjective(eob_Objective03);
			RevealNavpoint(ena_Nav_Zeta);
			setnavpoint(ena_Nav_Zeta);
			pauseConvoy = false;		//gets convoy rolling again
			blowBridge = true;
			obj4 = true;
		endif;
	endif;
	
	//Loose mission if player destroys bridge
	if not obj4 then
		if isdead(bridge) then
			failObjective(eob_Objective04);
			resetTimer(21);
			cinema_cut = 0;
			trans lostConvoy;
		endif;
	endif;
			
	
	// Victory Condition
	if obj1 and obj2 and obj3 and obj4 and obj5 and obj6 then
		resetTimer(21);
		/////////////////////
		// MISSION SALVAGE //
		/////////////////////
		Katie(eve_Chaser01,50);
		Katie(eve_Chaser02,40);
		Katie(eve_Jumper01,40);
		Katie(eve_Jumper02,30);

		cinema_cut = 0;
		trans won;
	endif;
	
	// Lose condition		
	if (GroupNumDead(theConvoy) > 1 ) then
		failObjectiveAll(9);
		resetTimer(21);
		cinema_cut = 0;
		trans lostConvoy;
	endif;

	//Fail the mission when the player dies
	if (isdead(playermech)) then
		failObjectiveAll(9);
		resetTimer(21);
		cinema_cut = 0;
		trans lostplayer;
	endif;
				
endstate;

//-----------------------------------------
//HERE THERE BE CINEMAS
//-----------------------------------------

state opening;
	code

		if cinemaSkip then
			CinemaEnd;
			SetCompositingEnabled(true);			
			playerAI(playermech, false);
			launchConvoy = true;
			killVoiceOvers;
			trans sit;
		endif;
		
		switch (cinema_cut)
			case 0:
				SetActiveCamera(eca_CameraShip);
				playerAI(epl_player0, true);
				SetCompositingEnabled(false);
				CinemaStart;
				FadeToBlack(0.0);
				Fadefromblack(2.0);
				Targetfollowobject(eve_convoy01);
				camerafollowobject(eve_convoy01);
				targetoffset(0.0, 4.0, 0.0, 0.0, false);
                Cameraoffset(-300.0, 4.0, -120.0, 0.0, false);       
                Cameraoffset(-20.0, 4.0, 0.0, 15.0, false);       
				resetTimer(21);
				cinema_cut = cinema_cut + 1;
			endcase;
			case 1:
				if TimeGreater(21, 10) then
					launchConvoy = true;
					cinema_cut = cinema_cut + 1;
				endif;
			endcase;
			case 2:
				if TimeGreater(21, 15) then
					cinema_cut = cinema_cut + 1;
				endif;
			endcase;
			case 3:
				playerAI(playermech, false);
				CinemaEnd;
				SetCompositingEnabled(true);
				trans sit;
			endcase;
		endswitch;
	
endstate;

state won;
	code
		
		switch cinema_cut
			case 0:
				switch rand(1,2)
					case 1:
						StartMusic("Music\genericVictory1",3.5,3.0,50);
					endcase;
					case 2:
						StartMusic("Music\genericVictory2",3.5,3.0,50);
					endcase;
				endswitch;
				//PlayVoiceOverOnce("VO\Hesp\MI1\Close1", talker_CNV);
				PlayVoiceOverOnce("VO\Hesp\MI1\Close2", talker_CNV);
				PlayVoiceOverOnce("VO\Hesp\MI1\Close3", talker_SPE);
                cinema_cut = cinema_cut +1;
			endcase;
			case 1:
				if TimeGreater(21,5) then
					cinema_cut = cinema_cut +1;
				endif;
			endcase;
		
			case 2:	
				//EndMission(true, 10);
				SetActiveCamera(eca_CameraShip);
				PullOutCamera(playermech, playermech, 150.0, 12.0, true);				
				UpdateCameraPosition(eca_CameraShip);     
								
				SetCurrentInfamy(Infamy);
				SetCurrentNobility(Nobility);
				SetCurrentDavionFactionRating(DavionRating);
				SetCurrentSteinerFactionrating(SteinerRating);
				
				cinema_cut = cinema_cut + 1;
			endcase;
			case 3:
				if (not IsVoiceOverPlaying) then
					EndMission(true, 3);
					cinema_cut = cinema_cut + 1;
				endif;
			endcase;
		endswitch;
	
endstate;

state lostConvoy;
	var
		static ObjectID DeadConvoy;
	code
		
		switch cinema_cut
			case 0:
				killvoiceovers;
				switch rand(1,2)
					case 1:
						StartMusic("Music\genericLoss1",3.5,3.0,50);
					endcase;
					case 2:
						StartMusic("Music\genericLoss2",3.5,3.0,50);
					endcase;
				endswitch;
				switch rand(1,5)
					case 1:
						PlayVoiceOver("VO\Generic\Abort", talker_CAS);
					endcase;
					case 2:
						PlayVoiceOver("VO\Generic\Abort2", talker_CAS);
					endcase;
					case 3:
						PlayVoiceOver("VO\Generic\Abort3", talker_CAS);
					endcase;
					case 4:
						PlayVoiceOver("VO\Generic\Abort4", talker_CAS);
					endcase;
					case 5:
						PlayVoiceOver("VO\Generic\Abort5", talker_CAS);
					endcase;
				endswitch;
				cinema_cut = cinema_cut + 1;
			endcase;
			case 1:
				if TimeGreater(21, 5) then
					if IsDead(eve_convoy01) then
						DeadConvoy = eve_Convoy01;
					else
						if IsDead(eve_convoy02) then
							DeadConvoy = eve_Convoy02;
						else
							if IsDead(eve_convoy03) then
								DeadConvoy = eve_Convoy03;
							else
								if isDead(eve_convoy04) then
                                    DeadConvoy = eve_Convoy04;
								else
                                    DeadConvoy = bridge;
								endif;
							endif;
						endif;
					endif;
					cinema_cut = cinema_cut + 1;
				endif;
			endcase;
			case 2:	
				EndMission(false, 10);
				SetActiveCamera(eca_CameraShip);
				PullOutCamera(DeadConvoy, DeadConvoy, 150.0, 10.0, true);				
				UpdateCameraPosition(eca_CameraShip);     
				cinema_cut = cinema_cut + 1;
			endcase;
		endswitch;
	
endstate;

state lostPlayer;
	code
	
		switch cinema_cut
			case 0:
				KillVoiceOvers;
				switch rand(1,2)
					case 1:
						StartMusic("Music\genericLoss1",3.5,3.0,50);
					endcase;
					case 2:
						StartMusic("Music\genericLoss2",3.5,3.0,50);
					endcase;
				endswitch;
				switch rand(1,3)
					case 1:
						PlayVoiceOver("VO\Generic\SpecterDestroyed", talker_CAS);
					endcase;
					case 2:
						PlayVoiceOver("VO\Generic\SpecterDestroyed2", talker_CAS);
					endcase;
					case 3:
						PlayVoiceOver("VO\Generic\SpecterDestroyed3", talker_CAS);
					endcase;
				endswitch;
				cinema_cut = cinema_cut + 1;
			endcase;
			case 1:	
				EndMission(false, 10);
				//SetActiveCamera(eca_CameraShip);
				//PullOutCamera(playermech, playermech, 250.0, 10.0, true);				
				cinema_cut = cinema_cut + 1;
			endcase;
		endswitch;
	
endstate;

endfsm.
