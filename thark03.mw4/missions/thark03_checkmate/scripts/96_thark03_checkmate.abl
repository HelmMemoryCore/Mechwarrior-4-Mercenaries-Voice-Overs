
//*********************************************************************************

fsm Thark03_CheckMate : integer;		

//------------------------------------------------------------------
//
//     Constant Definitions
//
//------------------------------------------------------------------
     const

		#include_ <content\ABLScripts\mwconst.abi>
//------------------------------------------------------------------
//
//     Type Definitions
//
//------------------------------------------------------------------
     type

		#include_ <content\ABLScripts\mwtype.abi>

//------------------------------------------------------------------
//
//     Variable Declarations
//
//------------------------------------------------------------------
      var
			
		eternal integer playermech;
		static boolean		alphareached;		// Nav Alpha reached
		static boolean		betareached;		// Nav Beta reached
		static boolean		gammareached;		// Nav Gamma reached
		static boolean		deltareached;		// Nav Delta reached
		static integer		checkrange;			// How far from the Nav Point you have to be											
		
		eternal boolean	obj1;
		eternal boolean	obj2;
		eternal boolean	obj3;
		eternal boolean	obj4;
		eternal boolean	obj4Revealed;
		eternal boolean	obj5;
		eternal boolean	obj6;
		eternal boolean	obj6Revealed;
		
		eternal integer AlphaGroup;		//The group at Alpha
		eternal integer GammaGroup;		//The group at Gamma
		eternal integer SteinerGroup;		//The group at Gamma
		
		eternal boolean startTheFun;
		
		static integer	cinema_cut;
		
		static boolean firstAlphaVO;
		static boolean SecondAlphaVO;
		static boolean ThirdAlphaVO;
		static boolean firstBetaVO;
		static boolean SecondBetaVO;
		static boolean ThirdBetaVO;
		static boolean fourthBetaVo;
		static boolean firstGammaVO;
		static boolean SecondGammaVO;
		
		eternal Integer DavionRating;
		eternal Integer SteinerRating;
		eternal Integer Nobility;
		eternal Integer Infamy;
		
		static 	integer Group1Size;
		
 //------------------------------------------------------------------
//
//     Init Function    (automatically run first time through)
//
//------------------------------------------------------------------

function init;
	var
		integer i;

	code
		
        playermech = getplayervehicle(epl_player0);	
		if (GetLancemate(1) <> NO_UNIT) then
			GroupAddObject(GroupObjectId(5),GetLancemate(1));
		endif;
		if (GetLancemate(2) <> NO_UNIT) then
			GroupAddObject(GroupObjectId(5),GetLancemate(2));
		endif;
		if (GetLancemate(3) <> NO_UNIT) then
			GroupAddObject(GroupObjectId(5),GetLancemate(3));
		endif;
		if (GetSecondaryLancemate(1) <> NO_UNIT) then
			GroupAddObject(GroupObjectId(5),GetSecondaryLancemate(1));
		endif;
		if (GetSecondaryLancemate(2) <> NO_UNIT) then
			GroupAddObject(GroupObjectId(5),GetSecondaryLancemate(2));
		endif;
		if (GetSecondaryLancemate(3) <> NO_UNIT) then
			GroupAddObject(GroupObjectId(5),GetSecondaryLancemate(3));
		endif;
		if (GetSecondaryLancemate(4) <> NO_UNIT) then
			GroupAddObject(GroupObjectId(5),GetSecondaryLancemate(4));
		endif;
		Group1Size = GroupSize(GroupObjectId(5));
		

		// Mechs and tanks in the street near start
		GroupAddObject	(GroupObjectId(10), eve_tank01);
		GroupAddObject	(GroupObjectId(10), eve_tank02);
		GroupAddObject	(GroupObjectId(10), eve_tank03);
		GroupAddObject	(GroupObjectId(10), eve_tank04);
   		GroupAddObject	(GroupObjectId(10), eve_StreetMech01);
   		GroupAddObject	(GroupObjectId(10), eve_StreetMech02);
        SetGroupAI		(GroupObjectID(10), GROUPAI_RADIOSQUAD);
		
		// Enemy Mechs at Alpha
   		AlphaGroup = GroupObjectID(12);
		//GroupAddObject	(AlphaGroup, eve_AlphaMech01);
   		//GroupAddObject	(AlphaGroup, eve_AlphaMech02);
   		GroupAddObject	(AlphaGroup, eve_AlphaMech03);
   		GroupAddObject	(AlphaGroup, eve_AlphaMech04);
   		//GroupAddObject	(AlphaGroup, eve_AlphaMech05);
   		//GroupAddObject	(AlphaGroup, eve_AlphaTank01);
   		GroupAddObject	(AlphaGroup, etu_turret01);
   		GroupAddObject	(AlphaGroup, etu_turret02);
        SetGroupAI		(AlphaGroup, GROUPAI_RADIOSQUAD);
		
		// Friendly Mechs at Alpha
   		GroupAddObject	(GroupObjectId(14),eve_AlphaFriendly01);
   		//GroupAddObject	(GroupObjectId(14),eve_AlphaFriendly02);
   		GroupAddObject	(GroupObjectId(14),eve_AlphaFriendly03);
        SetGroupAI		(GroupObjectID(14),GROUPAI_RADIOSQUAD);
	
		// Enemy Mechs and planes Near Airport
   		GroupAddObject	(GroupObjectId(16),eve_GateMech01);
   		GroupAddObject	(GroupObjectId(16),eve_GateMech02);
   		GroupAddObject	(GroupObjectId(16),eve_GateMech03);
   		GroupAddObject	(GroupObjectId(16),eve_GateMech04);
   		GroupAddObject	(GroupObjectId(16),eve_Heli01);
   		GroupAddObject	(GroupObjectId(16),eve_Heli02);
   		GroupAddObject	(GroupObjectId(16),eve_Plane01);
   		GroupAddObject	(GroupObjectId(16),eve_Plane02);
   		GroupAddObject	(GroupObjectId(16),eve_Plane03);
   		GroupAddObject	(GroupObjectId(16),eve_Plane04);
   		GroupAddObject	(GroupObjectId(16),eve_Plane05);
   		GroupAddObject	(GroupObjectId(16),eve_Plane06);
        SetGroupAI		(GroupObjectID(16),GROUPAI_RADIOSQUAD);
 		
		// Enemy Mechs Near Airport
   		GroupAddObject	(GroupObjectId(17),eve_GateMech01);
   		GroupAddObject	(GroupObjectId(17),eve_GateMech02);
   		GroupAddObject	(GroupObjectId(17),eve_GateMech03);
   		GroupAddObject	(GroupObjectId(17),eve_GateMech04);
		
		// Enemy Mechs Near Nav Gamma
   		GammaGroup = GroupObjectID(18);
   		GroupAddObject	(GammaGroup,eve_BetaMech01);
   		GroupAddObject	(GammaGroup,eve_BetaMech02);
   		GroupAddObject	(GammaGroup,eve_BetaMech03);
   		GroupAddObject	(GammaGroup,eve_BetaMech04);
   		GroupAddObject	(GammaGroup,eve_BetaMech05);
   		GroupAddObject	(GammaGroup,eve_BetaMech06);
   		//GroupAddObject	(GammaGroup,eve_BetaMech07);
   		//GroupAddObject	(GammaGroup,eve_BetaMech08);
        SetGroupAI		(GammaGroup,GROUPAI_RADIOSQUAD);
		
		// Friendly Mechs at Nav Gamma
   		GroupAddObject	(GroupObjectId(20),eve_DavionMech01);
   		GroupAddObject	(GroupObjectId(20),eve_DavionMech02);
   		GroupAddObject	(GroupObjectId(20),eve_DavionMech03);
   		GroupAddObject	(GroupObjectId(20),eve_Peter_Steiner_Davion);
        SetGroupAI		(GroupObjectID(20),GROUPAI_RADIOSQUAD);
		
		// Steiner Mechs
   		SteinerGroup = GroupObjectID(22);
   		GroupAddObject	(SteinerGroup, eve_SteinerMech01);
   		GroupAddObject	(SteinerGroup, eve_SteinerMech02);
   		GroupAddObject	(SteinerGroup, eve_SteinerMech03);
   		GroupAddObject	(SteinerGroup, eve_SteinerMech04);
   		GroupAddObject	(SteinerGroup, eve_Nondi_Steiner);
        SetGroupAI		(SteinerGroup, GROUPAI_RADIOSQUAD);
		
		cinema_cut = 0;
		obj1 = false; 						
		obj2 = false; 						
		obj3 = false; 						
		obj4 = false; 						
		obj4Revealed = false; 						
		obj5 = false; 						
		obj6 = false; 						
		obj6Revealed = false; 						
		
		DavionRating = GetPreviousDavionFactionRating;
		Davionrating = DavionRating + 23;
		SteinerRating = GetPreviousSteinerFactionRating;
		SteinerRating = SteinerRating;
		Nobility = GetPreviousNobility;
		nobility = nobility + 11;
		Infamy = GetPreviousInfamy;
		infamy = infamy;
		
endfunction;

//------------------------------------------------------------------
//
//     Main Code
//
//------------------------------------------------------------------
state startState;

	code
		
		CheckRange = 150;
		
		revealObjective(eob_objective01);
		revealObjective(eob_objective02);
		revealObjective(eob_objective03);
		//revealObjective(eob_Objective04);
		
		RevealNavpoint(ena_Nav_Alpha);		
		RevealNavpoint(ena_Nav_Beta);
		RevealNavpoint(ena_Nav_Gamma);
		setRadarNav(ena_Nav_Alpha, 1);
		setRadarNav(ena_Nav_Beta, 2);
		setRadarNav(ena_Nav_Gamma, 3);
		SetNavPoint(ena_Nav_Alpha);
		
		//Intro VO
		PlayVoiceOverOnce("VO\Tharkad\MI3\Intro1", talker_PET);
		PlayVoiceOverOnce("VO\Tharkad\MI3\Intro2", talker_SPE);
		PlayVoiceOverOnce("VO\Tharkad\MI3\MissionBrief", talker_PET);
		PlayVoiceOverOnce("VO\Tharkad\MI3\Acknowledged", talker_SPE);
		PlayVoiceOverOnce("VO\Tharkad\MI3\GoodLuck", talker_PET);
		PlayVoiceOverOnce("VO\Tharkad\MI3\YouToo", talker_SPE);
		//PlayVoiceOverOnce("VO\Tharkad\MI3\NavPointsUploaded", talker_CAS);
		StartMusic("Music\NextMove",0.0,3.0,40);
		
		trans opening;

endstate;

	
state deadState;
	code
endstate;
	
//------------------------------------------------------------------
//
//     Sit state : description
//
//------------------------------------------------------------------
state sit;

	code
	//Music
	if (not ismusicplaying) then
		StartMusic("Music\Urbanambloop",0.0,3.0,40);
	endif;
	
	
	//VO
	if (not firstAlphaVO) then
		if IsWithin(playerMech, GroupObjectID(10), 700) then
			if (not GroupAllDead(groupObjectID(5))) and (Group1Size > 0) then
				PlayLanceMateSound("vo\generic\VisContact",1);
			else
				PlayVoiceOver("VO\Generic\EnemyMech3", talker_Cas);
			endif;
			PlayVoiceOverOnce("VO\Tharkad\MI3\GotIt", talker_SPE);
			firstAlphaVO = true;
		endif;
	endif;
	if (not SecondAlphaVO) then
		if IsWithin(playerMech, Ena_Nav_Alpha, 600) then
			PlayVoiceOverOnce("VO\Tharkad\MI3\HostilesAtAlpha", talker_SPE);
			PlayLanceMateSound("vo\generic\Roger",1);
			SecondAlphaVO = true;
		endif;
	endif;
	if (not ThirdAlphaVO) then
		if GroupAllDead(GroupObjectID(12)) then
			PlayVoiceOverOnce("VO\Tharkad\MI3\AlphaCleared", talker_SPE);
			PlayVoiceOverOnce("VO\Tharkad\MI3\Airfield", talker_Cas);
			PlayVoiceOverOnce("VO\Tharkad\MI3\EnrouteBeta", talker_SPE);
			ThirdAlphaVO = true;
			SecondAlphaVO = true;	//In case player clears alpha without triggering SecondAlphaVO
		endif;
	endif;
	if (not firstBetaVO) then
		if IsWithin(playerMech, GroupObjectID(17), 900) then
			if (not GroupAllDead(groupObjectID(5))) and (Group1Size > 0) then
				PlayLanceMateSound("vo\generic\Contact900",1);
			else
				PlayVoiceOver("VO\Generic\ReinfUnits", talker_Cas);
			endif;
			PlayVoiceOverOnce("VO\Tharkad\MI3\Engaging15thLance", talker_SPE);
			PlayVoiceOverOnce("VO\Tharkad\MI3\NoSignOfGeneral", talker_SPE);
			PlayVoiceOverOnce("VO\Tharkad\MI3\Engaging2Lances", talker_PET);
			PlayVoiceOverOnce("VO\Tharkad\MI3\MoveToSupport", talker_SPE);
			PlayVoiceOverOnce("VO\Tharkad\MI3\Negative", talker_PET);
			firstBetaVO = true;
		endif;
	endif;
	if (not SecondBetaVO) then
		if GroupAllDead(GroupObjectID(16)) then
			PlayVoiceOverOnce("VO\Tharkad\MI3\DefendersElim", talker_SPE);
			SecondBetaVO = true;
		endif;
	endif;
	if (not thirdBetaVo) then
		if obj2 and obj3 and (not Obj4) then
			PlayVoiceOverOnce("VO\Generic\AirDestroyed2", talker_CAS);
			PlayVoiceOverOnce("VO\Tharkad\MI3\SecureNavGamma", talker_PET);
			thirdBetaVo = true;
		endif;
	endif;
	if (not fourthBetaVo) then
		if obj2 or obj3 then
			PlayVoiceOverOnce("VO\Generic\ObjComplete", talker_CAS);
			fourthBetaVo = true;
		endif;
	endif;
	if (not firstGammaVO) then
		if IsWithin(playerMech, GroupObjectID(18), 900) then
			PlayVoiceOverOnce("VO\Generic\EnemyMech3", talker_CAS);
			firstGammaVO = true;
		endif;
	endif;
	if (not secondGammaVO) then
		if obj6Revealed then
			PlayVoiceOverOnce("VO\Tharkad\MI3\YourInsurrectionEndsHere", talker_NON);
			PlayVoiceOverOnce("VO\Tharkad\MI3\DenounceKatrina", talker_Pet);
			PlayVoiceOverOnce("VO\Tharkad\MI3\NotGoingToHappen", talker_NON);
			PlayVoiceOverOnce("VO\Tharkad\MI3\HadHerChance", talker_CAS);
			PlayVoiceOverOnce("VO\Tharkad\MI3\LetsGetInThere", talker_SPE);
			secondGammaVO = true;
		endif;
	endif;
//VO end
		
			
	
	
		if (not obj1) then					// Alpha guards are destroyed
			if GroupAllDead(AlphaGroup) then
				successObjective(eob_objective01);
				obj1 = true;
				setNavPoint(ena_Nav_Beta);
			endif;
		endif;
		
		if (not obj2) then					// Air Control tower is destroyed
			if IsDead(ebu_Objective02Building) then
				successObjective(eob_objective02);
				//PlayVoiceOver("VO\ObjComplete",TALKER_CAS);
				obj2 = true;
				if obj3 then
					setNavPoint(ena_Nav_Gamma);
					revealObjective(eob_Objective05);
					revealObjective(eob_Objective04);
					obj4Revealed = true;
				endif;
			endif;
		endif;
		
		if (not obj3) then						// Hangars are destroyed
			if IsDead(ebu_Objective03Building) and IsDead(ebu_Hangar) then
				successObjective(eob_objective03);
				//PlayVoiceOver("VO\ObjComplete",TALKER_CAS);
				obj3 = true;
				if obj2 then
					setNavPoint(ena_Nav_Gamma);
					revealObjective(eob_Objective04);
					revealObjective(eob_Objective05);
					obj4Revealed = true;
				endif;
			endif;
		endif;
		
		if (not obj4) and obj4Revealed then		// Mechs guarding front gate are destroyed
			if GroupAllDead(GammaGroup) then
				successObjective(eob_objective04);
				obj4 = true;
			endif;
		endif;
		
		if obj1 and obj4 then
			if IsWithin(playerMech, ena_Nav_gamma, 600) then	// Steiner shows up with her elite guards
				revealObjective(eob_objective06);
				obj6Revealed = true;
				StartMusic("Music\behemoths",3.5,3.0,50);
			endif;
		endif;
		
		if obj6Revealed then
			if isDead(eve_Nondi_Steiner) then		// Nondi must die
				successObjective(eob_objective06);
				successObjective(eob_objective05);
				obj5 = true;
				obj6 = true;
				cinema_cut = 0;
				resetTimer(21);
				trans won;
			endif;
		endif;
		
		if isDead(eve_Peter_Steiner_Davion) then		// Peter must survive the mission.
			failObjective(eob_objective05);
			cinema_cut = 0;
			resetTimer(21);
			trans lostPeter;
		endif;
				
	
			

//Fail the mission when the player dies
	if (isdead(playermech)) then
		failobjectiveall(9);
		cinema_cut = 0;
		resetTimer(21);
		trans lost;
	endif;

// Betty speaks when reaching Nav Point

	if (not alphareached) then
		if (isnavrevealed(ena_nav_alpha)) then
			if (iswithin(playermech,ena_nav_alpha,checkrange)) then
				playvoiceover("VO\generic\navalpha",talker_Bet);
				alphareached = true;
				//SetNavpoint(ena_Nav_Beta);
			endif;
		endif;
	endif;

	if (not betareached) then
		if (isnavrevealed(ena_nav_beta)) then
			if (iswithin(playermech,ena_nav_beta,checkrange)) then
				playvoiceover("VO\generic\navbeta",talker_Bet);
				betareached = true;
				//SetNavpoint(ena_Nav_Gamma);
			endif;
		endif;
	endif;

	if (not gammareached) then
		if (isnavrevealed(ena_nav_gamma)) then
			if (iswithin(playermech,ena_nav_gamma,checkrange)) then
				playvoiceover("VO\generic\navgamma",talker_Bet);
				gammareached = true;
				//SetNavpoint(ena_Nav_Gamma);
			endif;
		endif;
	endif;
				
endstate;

//-----------------------------------------
//HERE THERE BE CINEMAS
//-----------------------------------------

state opening;
	code

		if cinemaSkip then
			CinemaEnd;
			SetCompositingEnabled(true);			
			playerAI(playermech, false);
			KillVoiceOvers;
			startTheFun = true;
			trans sit;
		endif;
 	
		switch (cinema_cut)
			case 0:
				SetActiveCamera(eca_CameraShip);
				playerAI(epl_player0, true);
				SetCompositingEnabled(false);
				CinemaStart;
				FadeToBlack(0.0);
				Targetfollowobject(ebu_Palace);
				camerafollowobject(ebu_Palace);
				targetoffset(0.0, 5.0, 0.0, 0.0, false);
                Cameraoffset(0.0, 10.0, 0.0, 0.0, false);       
                Cameraoffset(0.0, 10.0, -600.0, 2.0, false);       
				resetTimer(21);
				cinema_cut = cinema_cut + 1;
			endcase;
			case 1:
				if TimeGreater(21, 2) then			//Timer 21, standard cinema timer
					FadefromBlack(5.0);
					Cameraoffset(-600.0, 10.0, 0.0, 20.0, false);       
					resetTimer(21);
					cinema_cut = cinema_cut + 1;
				endif;
			endcase;
			case 2:
				if TimeGreater(21, 20) then			//Timer 21, standard cinema timer
					Cameraoffset(0.0, 10.0, 600.0, 20.0, false);       
					resetTimer(21);
					cinema_cut = cinema_cut + 1;
				endif;
			endcase;
			case 3:
				if (not isVoiceOverPlaying) then
					PlayVoiceOverOnce("VO\Tharkad\MI3\NavPointsUploaded", talker_CAS);
					cinema_cut = cinema_cut + 1;
				endif;
			endcase;
			case 4:
				CinemaEnd;
				SetCompositingEnabled(true);			
				playerAI(playermech, false);
				
				startTheFun = true;
				trans sit;
			endcase;
		endswitch;
endstate;

state won;
	code
		
		switch cinema_cut
			case 0:
				PlayVoiceOverOnce("VO\Tharkad\MI3\NondiIsDown", talker_SPE);
				PlayVoiceOverOnce("VO\Tharkad\MI3\PowerDown", talker_PET);
				PlayVoiceOverOnce("VO\Tharkad\MI3\WeYield", talker_GUA);
				PlayVoiceOverOnce("VO\Tharkad\MI3\close2", talker_CAS);
				PlayVoiceOverOnce("VO\Tharkad\MI3\Close3", talker_SPE);
				switch rand(1,2)
					case 1:
						StartMusic("Music\genericVictory1",3.5,3.0,50);
					endcase;
					case 2:
						StartMusic("Music\genericVictory2",3.5,3.0,50);
					endcase;
				endswitch;
				cinema_cut = cinema_cut +1;
			endcase;
			case 1:
				if TimeGreater(21,5) then
					cinema_cut = cinema_cut +1;
				endif;
			endcase;
			case 2:	
				SetActiveCamera(eca_CameraShip);
				PullOutCamera(playermech, playermech, 150.0, 25.0, true);				
				UpdateCameraPosition(eca_CameraShip);     
  							
				SetCurrentInfamy(Infamy);
				SetCurrentNobility(Nobility);
				SetCurrentDavionFactionRating(DavionRating);
				SetCurrentSteinerFactionrating(SteinerRating);
				
				cinema_cut = cinema_cut + 1;
			endcase;
			case 3:
				if (not IsVoiceOverPlaying) then
					EndMission(true, 3);
					cinema_cut = cinema_cut + 1;
				endif;
			endcase;
		endswitch;
	
endstate;

state lost;
	code
	
		switch cinema_cut
			case 0:
				KillVoiceOvers;
				switch rand(1,2)
					case 1:
						StartMusic("Music\genericLoss1",3.5,3.0,50);
					endcase;
					case 2:
						StartMusic("Music\genericLoss2",3.5,3.0,50);
					endcase;
				endswitch;
				switch rand(1,3)
					case 1:
						PlayVoiceOver("VO\Generic\SpecterDestroyed", talker_CAS);
					endcase;
					case 2:
						PlayVoiceOver("VO\Generic\SpecterDestroyed2", talker_CAS);
					endcase;
					case 3:
						PlayVoiceOver("VO\Generic\SpecterDestroyed3", talker_CAS);
					endcase;
				endswitch;
				cinema_cut = cinema_cut + 1;
			endcase;
			case 1:	
				EndMission(false, 10);
				//SetActiveCamera(eca_CameraShip);
				//PullOutCamera(playermech, playermech, 250.0, 10.0, true);				
				cinema_cut = cinema_cut + 1;
			endcase;
		endswitch;
	
endstate;

state lostPeter;
	code
		
		switch cinema_cut
			case 0:
				KillVoiceOvers;
				PlayVoiceOverOnce("VO\Tharkad\MI3\close1", talker_CAS);
				switch rand(1,2)
					case 1:
						StartMusic("Music\genericLoss1",3.5,3.0,50);
					endcase;
					case 2:
						StartMusic("Music\genericLoss2",3.5,3.0,50);
					endcase;
				endswitch;
				cinema_cut = cinema_cut + 1;
			endcase;
			case 1:
				if TimeGreater(21,5) then
					cinema_cut = cinema_cut +1;
				endif;
			endcase;
			case 2:	
				EndMission(false, 10);
				SetActiveCamera(eca_CameraShip);
				PullOutCamera(playermech, playermech, 150.0, 10.0, true);				
				UpdateCameraPosition(eca_CameraShip);     
				cinema_cut = cinema_cut + 1;
			endcase;
		endswitch;
	
endstate;

endfsm.
//******************************************************************

