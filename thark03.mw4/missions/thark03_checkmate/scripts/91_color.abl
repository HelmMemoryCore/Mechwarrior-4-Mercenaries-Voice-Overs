//*********************************************************************************

fsm Thark03_Color : integer;		

//------------------------------------------------------------------
//
//     Constant Definitions
//
//------------------------------------------------------------------
     const

		#include_ <content\ABLScripts\mwconst.abi>
//------------------------------------------------------------------
//
//     Type Definitions
//
//------------------------------------------------------------------
     type

		#include_ <content\ABLScripts\mwtype.abi>

//------------------------------------------------------------------
//
//     Variable Declarations
//
//------------------------------------------------------------------
	var
		static	ObjectID	unitPath;					// Path that the unit follows
		static	Integer		speed;						// speed at which the units travel
		static	Integer		memInt9;
		static  boolean		shotbyTest;
 
function Init;
	code
	
		speed = 55;
		memInt9 = getMemoryInteger(me,9);
		switch ( memint9)
			case 1:
				unitPath = epa_CarPath01;
			endcase;
			case 2:
				unitPath = epa_CarPath02;
			endcase;
			case 3:
				unitPath = epa_CarPath03;
			endcase;
			case 4:
				unitPath = epa_CarPath04;
			endcase;
			case 5:
				unitPath = epa_CarPath05;
			endcase;
			case 6:
				unitPath = epa_CarPath06;
			endcase;
			case 9:
				unitPath = NO_UNIT;
			endcase;
		endswitch;
		
		shotByTest = false;
		
endfunction;

state startState;
	code
		
		if (memint9 == 9) then
			trans stand;
		else
			trans sit;
		endif;
		
endstate;

state sit;

	code
	
	OrderMoveResumePatrol(unitPath, speed, MOVE_CIRCLE, true, false);
	
	//if (WhoDestroyed(me) == playerMech) then
	//	infamy = infamy + 1;
	//endif;
	
	if isDead(me) then
		trans deadState;
	endif;
	
	
endstate;

state stand;
	code
	
	//if (WhoDestroyed(me) == playerMech) then
	//	infamy = infamy + 1;
	//endif;
	
	if isDead(me) then
		trans deadState;
	endif;
	
endstate;

state deadState;
	code
		
		if (not shotByTest) then
			if (WhoDestroyed(me) == playerMech) then
				infamy = infamy + 1;
			endif;
			shotByTest = true;
		endif;

endstate;
	

endfsm.
