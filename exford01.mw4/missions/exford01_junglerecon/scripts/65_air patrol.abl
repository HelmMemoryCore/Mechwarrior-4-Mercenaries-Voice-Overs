
//------------------------------------------------------------------
// NOTE: The fsm name below MUST be changed in order for the
// script to be considered a unique entity!
//------------------------------------------------------------------

fsm airintercept : integer;


//------------------------------------------------------------------
// Air Cover:
//   This script controls all the flying opponents in this mission.
//   If the player has completed Clear Skies then they aren't
//   there.
//------------------------------------------------------------------



//------------------------------------------------------------------
//     Constants
//------------------------------------------------------------------

	const
		#include_ <content\ABLScripts\mwconst.abi>

//------------------------------------------------------------------
//     Types
//------------------------------------------------------------------

	type
		#include_ <content\ABLScripts\mwtype.abi>
	

//------------------------------------------------------------------
//     Variables
//------------------------------------------------------------------

	var
		static integer			attackRange;		// At what range do I start shooting?
		static integer			withdrawRange;		// At what range do I withdraw from combat completely?

		static integer			piloting;			// Piloting skill
		static integer			gunnery;			// Gunnery skill/chance to hit
		static real				minDelay;			// Minimum amount of time I will wait between shots once a weapon is reloaded
		static real				maxDelay;			// Maximum amount of time I will wait between shots once a weapon is reloaded
		static integer 			eliteLevel;			// Elite level.  This helps determine tactics, defensive manuevers, opportunity fire
													// and other things.  It indicates a general level of combat experience.
		static integer			attackThrottle;		// My attack throttle
		static integer			findTypes;			// What kind of enemies to look for

 		static integer			isShotRadius;		// How far away from me will I detect an enemy shot?

		static integer 			attackSound;		// The attack sound I play when I first attack
		static integer 			deathSound;			// The sound I play when I die
		
		static integer			mood;				// My default mood.

		static integer			takeOffDistance;	// My take-off distance if I'm an airplane (ignored if not an airplane)
        static boolean          timeroff;           // The shutdown timer is now counting.
        static locpoint         mystart1;           // This is the starting location used for teleport
        static locpoint         mystart2;           // This is the starting location used for teleport
        static locpoint         mystart3;           // This is the starting location used for teleport
        static locpoint         mystart4;           // This is the starting location used for teleport
        static boolean          goboom;             // The first Rebel Mech will blow up after a time
        static integer          groupis;            // Which integer group the unit is in
        static integer          path;               // This is the path of the units

//------------------------------------------------------------------
//     Init: my initialization function
//------------------------------------------------------------------

function Init;
	code
		// script-specific variables
		attackRange		= 900;
		withdrawRange	= attackRange * 3 / 2;
		takeOffDistance	= 450;

		// driver settings
		piloting		= 90;
		gunnery			= 220;
		minDelay		= 0.1;
		maxDelay		= 0.4;
		eliteLevel		= 90;
		attackThrottle	= 90;
		isShotRadius	= 120;
		attackSound		= -1; // no sound
		deathSound		= -1; // no sound
		mood			= NEUTRAL_START;
		findTypes		= FT_DEFAULT;

        groupis = GetMemoryInteger(me,9);

		if (GetMemoryInteger(me,9)==0) then         // Integer 0 = Fly By Plane
		    piloting		= 80;
		    gunnery			= 80;
	    	minDelay		= 0.1;
    		maxDelay		= 0.4;
            eliteLevel		= 90;
            path = epa_airsweep;
		endif;

endfunction;

//------------------------------------------------------------------
//	StartState: my initial state
//------------------------------------------------------------------

state StartState;

	code
		SetFiringDelay			(ME,minDelay,maxDelay);
		SetIgnoreFriendlyFire	(ME,true);
		SetIsShotRadius			(ME,isShotRadius);
		SetEntropyMood			(ME,mood);
		SetCurMood				(ME,mood);
		SetSkillLevel			(ME,piloting,gunnery,eliteLevel);
		SetAttackThrottle		(ME,attackThrottle);

        trans lobby;
        
endstate;

state lobby;
    code

		if (GroupAllDead(GroupObjectID(21))) then
			if (IsWithin(PlayerMech,ena_nav_beta,150)) then
				if (OrderTakeOff(TakeOffDistance)) then
					Airsweep = true;
					trans gettoplayer2;
				endif;
			endif;
		endif;

endstate;

state Gettoplayer2;
    code
    
		if (OrderMoveTo(path,600,move_nocycle,false,false)) then
			Airsweep = false;
			Destroy(me);
			trans deadstate;
		endif;

endstate;

//------------------------------------------------------------------
//	DeadState: OK, I kicked the bucket.
//------------------------------------------------------------------

state DeadState;
	code
		if (deathSound <> -1) then	
			PlaySoundOnce(deathSound);
		endif;		

		orderDie;

endstate;


endfsm.
