//*********************************************************************************

fsm Interceptors : integer;		

//------------------------------------------------------------------
//
//     Constant Definitions
//
//------------------------------------------------------------------
     const

		#include_ <content\ABLScripts\mwconst.abi>
//------------------------------------------------------------------
//
//     Type Definitions
//
//------------------------------------------------------------------
     type

		#include_ <content\ABLScripts\mwtype.abi>

//------------------------------------------------------------------
//
//     Variable Declarations
//
//------------------------------------------------------------------
	var
		static integer			attackRange;	// At what range do I start shooting?
		static integer			withdrawRange;	// At what range do I stop attacking?
		static integer			skillLevel;		// 1 - 10
		static integer			memInt9;		// value of Memory Integer number 9
		static boolean			pathEndReached;
		static boolean			overrideMove;

		static ObjectID			unitPath;		// the path the units follow
		static LocPoint			spawnPoint;
		static integer			WaveDelay;
		static integer			WaitTime;
		static integer			findTypes;
		
 function Init;
	code
		// script-specific variables
		attackRange				= 800;
		withdrawRange			= attackRange * 3 / 2;
		skillLevel				= 6;						// 1 - 10
		memInt9 				= GetMemoryInteger(me, 9);	// Value of memory integer number 9
		findTypes				= FT_DEFAULT;
		pathEndReached 			= false;
		unitPath 				= NO_UNIT;
		GetLocation (me, spawnPoint);
		shutDown(me);
		teleportToHell(me);
		
endfunction;
		
state StartState;

	code
	
		if obj3Revealed then
			AssignSkill(skillLevel);
			teleport(me, spawnpoint);
			startup(me);
			trans sit;
		endif;

endstate;

state sit;
	code
		
		//OrderMoveLookout;
		
		if FindEnemy(attackRange, FindTypes) then
			trans attackState;
		endif;
		
		if ( isShot ( me ) ) then
			setTarget(me, whoShot(me) );
			trans AttackState;
		endif;
		
		if isdead(me) then
			trans deadState;
		endif;
		
		if obj3 then		//Run away when dropships are dead
			orderStopAttacking;
			trans runaway;
		endif;
		
endstate;

state AttackState;

	code
	
		if( leaveAttackState(withdrawrange) ) then
			orderStopAttacking;
			settarget(me, NO_UNIT);
			trans sit;
		else
			OrderAttackTactic(TACTIC_PICK_BEST, true);
		endif;
		
		if ( isShot ( me ) ) then
			setTarget(me, whoShot(me) );
		endif;
		
		if isdead(me) then
			trans deadState;
		endif;
		
		if obj3 then		//Run away when dropships are dead
			orderStopAttacking;
			trans runaway;
		endif;
		
endstate;

state runaway;
	code
			
		OrderMoveResumePatrol(epa_wanderPath01, 100, MOVE_CIRCLE, true, false);
	
endstate;

state deadstate;
	code
		
endstate;

endfsm.
