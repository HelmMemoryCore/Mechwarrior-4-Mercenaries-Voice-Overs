
//*********************************************************************************

fsm HalloranV_05 : integer;		

//------------------------------------------------------------------
//
//     Constant Definitions
//
//------------------------------------------------------------------
     const

		#include_ <content\ABLScripts\mwconst.abi>
		#include_ <content\ABLScripts\Katie\katie_consts.abi>	// <-- my stuff
//------------------------------------------------------------------
//
//     Type Definitions
//
//------------------------------------------------------------------
     type

		#include_ <content\ABLScripts\mwtype.abi>

//------------------------------------------------------------------
//
//     Variable Declarations
//
//------------------------------------------------------------------
      var
			
		eternal integer playermech;
		
		eternal Boolean	play1;			//Is this the first time the mission is being played?
		eternal Boolean play2;			//Is this the second time the mission is being played?
		eternal Boolean play3;			//Is this the third time the mission is being played?
		
		eternal integer numFuelTanks;	//Is the number of objects in group 15.
		
		eternal boolean obj1;			//Has Objective one been completed?
		eternal Boolean obj2;			//has Objective two been completed?
		eternal Boolean obj3;			//has Objective three been completed?
		eternal integer enemyGroup;		//All the enemies in the mission.
		
		eternal Boolean launchPlanes;	//Used in planes.abl, launches the planes, set in Destroyers.abl and Mechs.abl
		eternal Boolean startTheFun;
		eternal boolean	hoversLaunched;	//Set in attackers.abl  Indicates the hovercraft areon the move
		
		static integer	cinema_cut;
		
		eternal Integer DavionRating;
		eternal Integer SteinerRating;
		eternal Integer Nobility;
		eternal Integer Infamy;
		
		static boolean FirstAlphaVO;
		static boolean FirstBetaVO;
		static boolean SecondBetaVO;
		static boolean ThirdBetaVO;
		static boolean FirstTurretVO;
		static boolean SecondTurretVO;
		
		static boolean AlphaReached;
		static boolean BetaReached;
		static boolean GammaReached;
		static boolean DeltaReached;
		static integer CheckRange;
		
//------------------------------------------------------------------
//
//     Init Function    (automatically run first time through)
//
//------------------------------------------------------------------

function init;
	var
		integer i;

	code

		playermech = getplayervehicle(epl_player0);	
		GroupAddObject(GroupObjectId(1),playermech);
		//setTargetDesirability(playerMech, -1);
		
		obj1 = false;
		obj2 = false;
		obj3 = false;
		hoversLaunched = false;
		
		// Create the objectives group
		GroupAddObject(GroupObjectID(10), ebu_ObjectiveBuilding02);
		GroupAddObject(GroupObjectID(10), ebu_ObjectiveBuilding03);
		GroupAddObject(GroupObjectID(10), ebu_ObjectiveBuilding04);
		
		// Create the secondary objectives group
		GroupAddObject(GroupObjectID(15), ebu_FuelTank01);
		GroupAddObject(GroupObjectID(15), ebu_FuelTank02);
		GroupAddObject(GroupObjectID(15), ebu_FuelTank03);
		GroupAddObject(GroupObjectID(15), ebu_FuelTank04);
		GroupAddObject(GroupObjectID(15), ebu_FuelTank05);
		GroupAddObject(GroupObjectID(15), ebu_FuelTank06);
		GroupAddObject(GroupObjectID(15), ebu_FuelTank07);
		GroupAddObject(GroupObjectID(15), ebu_FuelTank08);
		GroupAddObject(GroupObjectID(15), ebu_FuelTank09);
		GroupAddObject(GroupObjectID(15), ebu_FuelTank10);
		GroupAddObject(GroupObjectID(15), ebu_FuelTank11);
		GroupAddObject(GroupObjectID(15), ebu_FuelTank12);
		GroupAddObject(GroupObjectID(15), ebu_FuelTank13);
		GroupAddObject(GroupObjectID(15), ebu_FuelTank14);
		GroupAddObject(GroupObjectID(15), eve_FuelTruck01);
		GroupAddObject(GroupObjectID(15), eve_FuelTruck02);
		GroupAddObject(GroupObjectID(15), eve_FuelTruck03);
		GroupAddObject(GroupObjectID(15), eve_FuelTruck04);
		GroupAddObject(GroupObjectID(15), eve_FuelTruck05);
		GroupAddObject(GroupObjectID(15), eve_barge01);
		GroupAddObject(GroupObjectID(15), eve_barge02);
		GroupAddObject(GroupObjectID(15), eve_barge03);
		GroupAddObject(GroupObjectID(15), eve_barge04);
		GroupAddObject(GroupObjectID(15), eve_barge05);
		SetGroupAI	  (GroupObjectID(15), GroupAI_MOODSQUAD);
		numFuelTanks = GroupSize(GroupObjectID(15));
		
		//Turrets
		GroupAddObject(GroupObjectID(16), etu_turret01);
		GroupAddObject(GroupObjectID(16), etu_turret02);
		SetGroupAI	  (GroupObjectID(16), GroupAI_RADIOSQUAD);
		
		
		//Wave 1; boats
		GroupAddObject(GroupObjectID(20), eve_Wave101);
		GroupAddObject(GroupObjectID(20), eve_Wave102);
		GroupAddObject(GroupObjectID(20), eve_Wave103);
		GroupAddObject(GroupObjectID(20), eve_Wave104);
		GroupAddObject(GroupObjectID(20), eve_Wave105);
		GroupAddObject(GroupObjectID(20), eve_Wave106);
		SetGroupAI	  (GroupObjectID(20), GroupAI_RadioSquad);
		//Wave 2; hovers
		GroupAddObject(GroupObjectID(25), eve_Wave201);
		GroupAddObject(GroupObjectID(25), eve_Wave202);
		GroupAddObject(GroupObjectID(25), eve_Wave203);
		GroupAddObject(GroupObjectID(25), eve_Wave204);
		GroupAddObject(GroupObjectID(25), eve_Wave205);
		GroupAddObject(GroupObjectID(25), eve_Wave206);
		SetGroupAI	  (GroupObjectID(25), GroupAI_RadioSquad);
		//Destroyers
		GroupAddObject(GroupObjectID(40), eve_Arbold);
		GroupAddObject(GroupObjectID(40), eve_Harrington);
		SetGroupAI	  (GroupObjectID(40), GroupAI_NONE);
		
		//EnemyGroup
		enemyGroup = GroupObjectID(45); 
		GroupAddObject(enemyGroup, eve_Wave101);
		GroupAddObject(enemyGroup, eve_Wave102);
		GroupAddObject(enemyGroup, eve_Wave103);
		GroupAddObject(enemyGroup, eve_Wave104);
		GroupAddObject(enemyGroup, eve_Wave105);
		GroupAddObject(enemyGroup, eve_Wave106);
		GroupAddObject(enemyGroup, eve_Wave201);
		GroupAddObject(enemyGroup, eve_Wave202);
		GroupAddObject(enemyGroup, eve_Wave203);
		GroupAddObject(enemyGroup, eve_Wave204);
		GroupAddObject(enemyGroup, eve_Wave205);
		GroupAddObject(enemyGroup, eve_Wave206);
		GroupAddObject(enemyGroup, eve_Arbold);			//destroyer02
		GroupAddObject(enemyGroup, eve_Harrington);		//destroyer03
		SetGroupAI	  (enemyGroup, GroupAI_NONE);
		
		cinema_cut = 0;
		
		DavionRating = GetPreviousDavionFactionRating;
		SteinerRating = GetPreviousSteinerFactionRating;
		SteinerRating = SteinerRating + 3;
		Nobility = GetPreviousNobility;
		Nobility = Nobility + 4;
		Infamy = GetPreviousInfamy;
		CheckRange = 100;
		
endfunction;

		#include_ <content\ABLScripts\Katie\katie_script.abi>	// <-- my stuff

		//sadly, no mechs here so i edited this one for nothing.

//------------------------------------------------------------------
//
//     Main Code
//
//------------------------------------------------------------------
state startState;

	code
		//Intro VO	
		PlayVoiceOverOnce("VO\Halloran\MI1b\Intro1", talker_DEN);
		PlayVoiceOverOnce("VO\Halloran\MI1b\Intro2", talker_SPE);
		PlayVoiceOverOnce("VO\Halloran\MI1b\Intro3", talker_DEN);
		PlayVoiceOverOnce("VO\Halloran\MI1b\Intro4", talker_SPE);
		PlayVoiceOverOnce("VO\Halloran\MI1b\Intro5", talker_SPE);
		PlayVoiceOverOnce("VO\Halloran\MI1b\Intro6", talker_CAS);
		PlayVoiceOverOnce("VO\Halloran\MI1b\Intro7", talker_SPE);
		PlayVoiceOverOnce("VO\Halloran\MI1b\LastIntro", talker_CAS);
		
		StartMusic("Music\rally",3.5,3.0,50);
			
		// Reveal the Nav Points	   
		setRadarNav(ena_Nav_Alpha, 1);
		setRadarNav(ena_Nav_Beta, 2);
		setRadarNav(ena_Nav_Gamma, 3);
		setRadarNav(ena_Nav_Delta, 4);
		revealNavpoint(ena_Nav_Alpha);
		revealNavpoint(ena_Nav_Beta);
		revealNavpoint(ena_Nav_Gamma);
		revealNavpoint(ena_Nav_Delta);
		setNavpoint (ena_Nav_Alpha);
			
		//Reveal the objectives
		RevealObjective(eob_Objective01);
		RevealObjective(eob_Objective02);
		RevealObjective(eob_Objective03);

		SetTargetDesirability(ebu_ObjectiveBuilding01, 0);
		
		trans opening;

endstate;

	
state deadState;
	code
endstate;
	
//------------------------------------------------------------------
//
//     Sit state : description
//
//------------------------------------------------------------------
state sit;

	code
	//Music
	if (not ismusicplaying) then
		StartMusic("Music\arcticambloop",0.0,3.0,40);
	endif;
	
	//VO
	if (not FirstAlphaVO) then
		if TimeGreater(1, 5) then
			PlayVoiceOverOnce("VO\Halloran\MI1b\SupportAlpha", talker_DEN);
			PlayVoiceOverOnce("VO\Halloran\MI1b\MovingToAlpha", talker_Spe);
			PlayLanceMateSound("vo\generic\Roger",1);
			PlayVoiceOverOnce("VO\Halloran\MI1b\CalliopesOnline", talker_DEN);
			FirstAlphaVO = true;
		endif;
	endif;
	if (not FirstBetaVO) then
		if GroupAllDead(groupObjectID(20)) or hoversLaunched then
			PlayVoiceOverOnce("VO\Halloran\MI1b\SupportBeta", talker_DEN);
			PlayVoiceOverOnce("VO\Halloran\MI1b\StilletosNow", talker_Spe);
			PlayVoiceOverOnce("VO\Halloran\MI1b\AttackVectors", talker_Cas);
			PlayVoiceOverOnce("VO\Halloran\MI1b\Roger", talker_SPE);	//Harpy line
			setNavpoint (ena_Nav_Beta);
			FirstBetaVO = true;
		endif;
	endif;
	if (not SecondBetaVO) then
		if IsDead(eve_arbold) then
			PlayVoiceOverOnce("VO\Halloran\MI1b\HopeWeHelped", talker_SPE);	//Harpy line
			PlayVoiceOverOnce("VO\Halloran\MI1b\ThanksNightWing", talker_Spe);
			SecondBetaVO = true;
		endif;
	endif;
	if (not ThirdBetaVO) then
		if IsWithin(playerMech, GroupObjectID(25), 900) and FirstAlphaVO then
			PlayVoiceOverOnce("VO\Halloran\MI1b\EngagingHovers", talker_SPE);	
			ThirdBetaVO = true;
		endif;
	endif;
	if (not FirstTurretVO) then
		if (GroupNumDead(groupObjectID(16)) > 0 ) then
			PlayVoiceOverOnce("VO\Halloran\MI1b\Calliope1Offline", talker_DEN);
			FirstTurretVO = true;
		endif;
	endif;
	if (not SecondTurretVO) then
		if (GroupNumDead(groupObjectID(16)) > 1 ) then
			PlayVoiceOverOnce("VO\Halloran\MI1b\Calliope2Offline", talker_DEN);
			PlayVoiceOverOnce("VO\Halloran\MI1b\UpToYouSpectre", talker_DEN);
			PlayVoiceOverOnce("VO\Halloran\MI1b\NoWorries", talker_SPE);
			SecondTurretVO = true;
		endif;
	endif;
	// Betty speaks when reaching Nav Point
	if (not alphareached) then
		if (isnavrevealed(ena_nav_alpha)) then
			if (iswithin(playermech,ena_nav_alpha,checkrange)) then
				playvoiceover("VO\generic\navalpha",talker_Bet);
				alphareached = true;
			endif;
		endif;
	endif;
	if (not betareached) then
		if (isnavrevealed(ena_nav_beta)) then
			if (iswithin(playermech,ena_nav_beta,checkrange)) then
				playvoiceover("VO\generic\navbeta",talker_Bet);
				betareached = true;
			endif;
		endif;
	endif;
	if (not gammareached) then
		if (isnavrevealed(ena_nav_gamma)) then
			if (iswithin(playermech,ena_nav_gamma,checkrange)) then
				playvoiceover("VO\generic\navgamma",talker_Bet);
				gammareached = true;
			endif;
		endif;
	endif;
	if (not Deltareached) then
		if (isnavrevealed(ena_nav_Delta)) then
			if (iswithin(playermech,ena_nav_Delta,checkrange)) then
				playvoiceover("VO\generic\navDelta",talker_Bet);
				Deltareached = true;
			endif;
		endif;
	endif;
	
	//VO end
	
	
	
	// If half of the Fuel industry vehicles and buildings are destroyed, fail the secondary objective
	if (not obj3) then
		if ( groupNumDead(GroupObjectID(15)) > (numFuelTanks/2) ) then
			failObjective(eob_objective03);
			obj3 = true;
		endif;
	endif;

	// If an Oil drill dies, mission fail
	if (not obj1) then
		if isDead(ebu_ObjectiveBuilding01) then
			failObjective(eob_objective01);
			obj1 = true;
			
			cinema_cut = 0;
			resetTimer(21);
			trans lostobj1;
		endif;
	endif;
	
	if (not obj2) then
		if (GroupNumDead(GroupObjectID(10)) > 0 ) then
			failObjective(eob_objective02);
			obj2 = true;
			
			cinema_cut = 0;
			resetTimer(21);
			trans lostobj2;
		endif;
	endif;
	
	// if all attackers are dead, you win
	if (not obj1) and (not obj2) then
		if groupAllDead(enemyGroup) then
			successObjective(eob_Objective01);
			obj1 = true;
			successObjective(eob_Objective02);
			obj2 = true;
			if (not obj3) then
				successObjective(eob_Objective03);
				AddMissionMoneyToBalance(500000);
				obj3 = true;
			endif;
			// Salvage 
			//
			cinema_cut = 0;
			resetTimer(21);
			trans won;
		endif;
	endif;
	
			 
//Fail the mission when the player dies
	if (isdead(playermech)) then
		failobjectiveall(9);
		
		cinema_cut = 0;
		resetTimer(21);
		trans lostPlayer;
	endif;
	
endstate;

//-----------------------------------------
//HERE THERE BE CINEMAS
//-----------------------------------------

state opening;
	code

		if cinemaSkip then
			CinemaEnd;
			SetCompositingEnabled(true);			
			playerAI(playermech, false);
			KillVoiceOvers;
			resetTimer(1);
			startTheFun = true;
			trans sit;
		endif;
 	
		switch (cinema_cut)
			case 0:
				SetActiveCamera(eca_CameraShip);
				SpinUnderCamera(playermech, playermech, 30.0, 35.0, true);				
				cinema_cut = cinema_cut + 1;
			endcase;
			case 1:
				if TimeGreater(21, 10) then			
					cinema_cut = cinema_cut + 1;
				endif;
			endcase;
			case 2:
				if (not IsVoiceOverPlaying) then
					cinema_cut = cinema_cut + 1;
				endif;
			endcase;
			case 3:
				CinemaEnd;
				SetCompositingEnabled(true);			
				playerAI(playermech, false);
				resetTimer(1);
				startTheFun = true;
				trans sit;
			endcase;
		endswitch;
endstate;

state won;
	code
	
		switch cinema_cut
			case 0:
				PlayVoiceOverOnce("VO\Halloran\MI1b\HarborSecure", talker_SPE);
				PlayVoiceOverOnce("VO\Halloran\MI1b\Close1", talker_DEN);
				PlayVoiceOverOnce("VO\Halloran\MI1b\Close2", talker_SPE);
				PlayVoiceOverOnce("VO\Halloran\MI1b\Close3", talker_CAS);
				PlayVoiceOverOnce("VO\Halloran\MI1b\Close4", talker_SPE);
				switch rand(1,2)
					case 1:
						StartMusic("Music\genericVictory1",3.5,3.0,50);
					endcase;
					case 2:
						StartMusic("Music\genericVictory2",3.5,3.0,50);
					endcase;
				endswitch;
				cinema_cut = cinema_cut + 1;
			endcase;
			case 1:
				if TimeGreater(21,5) then
					cinema_cut = cinema_cut + 1;
				endif;
			endcase;
			case 2:	
				//EndMission(true, 10);
				SetActiveCamera(eca_CameraShip);
				PullOutCamera(playermech, playermech, 250.0, 10.0, true);
				UpdateCameraPosition(eca_CameraShip);     
								
				SetCurrentInfamy(Infamy);
				SetCurrentNobility(Nobility);
				SetCurrentDavionFactionRating(DavionRating);
				SetCurrentSteinerFactionrating(SteinerRating);
				
				cinema_cut = cinema_cut + 1;
			endcase;
			case 3:
				if (not IsVoiceOverPlaying) then
					EndMission(true, 3);
					cinema_cut = cinema_cut + 1;
				endif;
			endcase;
		endswitch;
 
endstate;

state lostPlayer;
	code
	
		switch cinema_cut
			case 0:
				KillVoiceOvers;
				switch rand(1,2)
					case 1:
						StartMusic("Music\genericLoss1",3.5,3.0,50);
					endcase;
					case 2:
						StartMusic("Music\genericLoss2",3.5,3.0,50);
					endcase;
				endswitch;
				switch rand(1,3)
					case 1:
						PlayVoiceOver("VO\Generic\SpecterDestroyed", talker_CAS);
					endcase;
					case 2:
						PlayVoiceOver("VO\Generic\SpecterDestroyed2", talker_CAS);
					endcase;
					case 3:
						PlayVoiceOver("VO\Generic\SpecterDestroyed3", talker_CAS);
					endcase;
				endswitch;
				cinema_cut = cinema_cut + 1;
			endcase;
			case 1:	
				EndMission(false, 10);
				//SetActiveCamera(eca_CameraShip);
				//PullOutCamera(playermech, playermech, 250.0, 10.0, true);				
				cinema_cut = cinema_cut + 1;
			endcase;
		endswitch;
	
endstate;

state lostobj1;
	code
	
		switch cinema_cut
			case 0:
				KillVoiceOvers;
				switch rand(1,2)
					case 1:
						StartMusic("Music\genericLoss1",3.5,3.0,50);
					endcase;
					case 2:
						StartMusic("Music\genericLoss2",3.5,3.0,50);
					endcase;
				endswitch;
				switch rand(1,5)
					case 1:
						PlayVoiceOver("VO\Generic\Abort", talker_CAS);
					endcase;
					case 2:
						PlayVoiceOver("VO\Generic\Abort2", talker_CAS);
					endcase;
					case 3:
						PlayVoiceOver("VO\Generic\Abort3", talker_CAS);
					endcase;
					case 4:
						PlayVoiceOver("VO\Generic\Abort4", talker_CAS);
					endcase;
					case 5:
						PlayVoiceOver("VO\Generic\Abort5", talker_CAS);
					endcase;
				endswitch;
				cinema_cut = cinema_cut + 1;
			endcase;
			case 1:
				if TimeGreater(21,5) then
					cinema_cut = cinema_cut +1;
				endif;
			endcase;
			case 2:	
				EndMission(false, 10);
				SetActiveCamera(eca_CameraShip);
				HeadOnCamera(ebu_ObjectiveBuilding01, ebu_ObjectiveBuilding01, 25.0, 10.0, true);				
				UpdateCameraPosition(eca_CameraShip);     
				cinema_cut = cinema_cut + 1;
			endcase;
		endswitch;
	
endstate;

state lostobj2;
	var
		static ObjectID deadRig;
	code
	
		switch cinema_cut
			case 0:
				KillVoiceOvers;
				switch rand(1,2)
					case 1:
						StartMusic("Music\genericLoss1",3.5,3.0,50);
					endcase;
					case 2:
						StartMusic("Music\genericLoss2",3.5,3.0,50);
					endcase;
				endswitch;
				switch rand(1,5)
					case 1:
						PlayVoiceOver("VO\Generic\Abort", talker_CAS);
					endcase;
					case 2:
						PlayVoiceOver("VO\Generic\Abort2", talker_CAS);
					endcase;
					case 3:
						PlayVoiceOver("VO\Generic\Abort3", talker_CAS);
					endcase;
					case 4:
						PlayVoiceOver("VO\Generic\Abort4", talker_CAS);
					endcase;
					case 5:
						PlayVoiceOver("VO\Generic\Abort5", talker_CAS);
					endcase;
				endswitch;
				cinema_cut = cinema_cut + 1;
			endcase;
			case 1:
				if TimeGreater(21,5) then
					if isDead(ebu_ObjectiveBuilding02) then
						deadRig = ebu_ObjectiveBuilding02;
					else
						if isDead(ebu_ObjectiveBuilding03) then
							deadRig = ebu_ObjectiveBuilding03;
						else
							deadRig = ebu_ObjectiveBuilding04;
						endif;
					endif;
					cinema_cut = cinema_cut + 1;
				endif;
			endcase;
			case 2:	
				EndMission(false, 10);
				SetActiveCamera(eca_CameraShip);
				HeadOnCamera(deadRig, deadRig, 25.0, 10.0, true);				
				UpdateCameraPosition(eca_CameraShip);     
				cinema_cut = cinema_cut + 1;
			endcase;
		endswitch;
	
endstate;

endfsm.
//******************************************************************

