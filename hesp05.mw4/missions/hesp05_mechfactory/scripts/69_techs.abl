//*********************************************************************************

fsm techs : integer;		

//------------------------------------------------------------------
//
//     Constant Definitions
//
//------------------------------------------------------------------
     const

		#include_ <content\ABLScripts\mwconst.abi>
//------------------------------------------------------------------
//
//     Type Definitions
//
//------------------------------------------------------------------
     type

		#include_ <content\ABLScripts\mwtype.abi>

//------------------------------------------------------------------
//
//     Variable Declarations
//
//------------------------------------------------------------------
	var
		static integer			attackRange;	// At what range do I start shooting?
		static integer			withdrawRange;	// At what range do I stop attacking?
		static integer			skillLevel;		// 1 - 10
		static integer			memInt9;		// value of Memory Integer number 9
		static boolean			pathEndReached;

		static ObjectID			unitPath;		// the path the units follow
		static LocPoint			spawnPoint;
		static LocPoint			hidePoint;

		static integer			speed;			//path speed
		static integer			moveType;
		static integer			friendlyTimer;
		static integer			waitTime;
		
 function Init;
	code
		// script-specific variables
		attackRange				= 800;
		withdrawRange			= attackRange * 3 / 2;
		skillLevel				= 9;						// 1 - 10
		memInt9 				= GetMemoryInteger(me, 9);	// Value of memory integer number 9
		pathEndReached 			= false;
		speed					= 200;
		moveType				= MOVE_NOCYCLE;
		unitPath				= epa_TechPath01;
		friendlyTimer 			= gti_timer_30;
		waitTime				= 150;
					
endfunction;
		
state StartState;

	code
	
	AssignSkill(skillLevel);
	GetLocation(me, spawnPoint);
	GetLocation(ena_hidePoint, hidePoint);
	
	clearMoveOrder(me);
	teleport(me, hidePoint);
	
	trans waitState;

endstate;

state waitState;
	
	code
	
	if obj2 then
		teleport(me, spawnPoint);
		clearMoveOrder(me);
		orderTakeoff(1);
		trans sit;
	endif;
	
endstate;

state sit;
	
	code
	
		if (not pathEndReached) then
			if OrderMoveTo(unitPath, speed, moveType, true, false) then
				pathEndReached = true;
			endif;
		else
			OrderLand;
			resetTimer(friendlyTimer);
			techsLanded = true;
			trans stealState;
		endif;
	
		if isDead(me) then
			trans deadState;
		endif;
		
endstate;

state stealState;
	
	code
		if isDead(me) then
			trans deadState;
		endif;
		
		if TimeGreater(friendlyTimer, waitTime) then
			unitPath = epa_techPath02;
			OrderTakeOff(1);
			pathEndReached = false;
			obj3triggered = true;                       // used in Main abl script, and mechs.abl
			trans returnState;
		endif;
			
endstate;

state returnState;
	
	code
		if isDead(me) then
			trans deadState;
		endif;
		
		if pathEndReached then
			orderMoveLookOut;
		else
			if OrderMoveResumePatrol(unitPath, speed, moveType, true, false) then
				pathEndReached = true;
			endif;
		endif;
		
		if (not obj5triggered) then
			if IsWithin(me, ena_nav_delta, 100) then
				obj5triggered = true;					// used in Main abl script
			endif;
		endif;
		
endstate;

state deadstate;
	code
		
endstate;

endfsm.
